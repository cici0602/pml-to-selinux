# Database Service Policy
# Scenario: Database binds to port 5432, manages data files and logs
# Using standard Casbin triple format (sub, obj, act, eft)
# Class information encoded in object using ::class suffix or auto-inferred

# Execute the database binary
p, mydb_t, /usr/lib/mydb/bin/mydb, execute, allow

# Read/write database files
p, mydb_t, /var/lib/mydb(/.*)?, read, allow
p, mydb_t, /var/lib/mydb(/.*)?, write, allow
p, mydb_t, /var/lib/mydb(/.*)?, create, allow
p, mydb_t, /var/lib/mydb(/.*)?, unlink, allow

# Directory operations
p, mydb_t, /var/lib/mydb(/.*)?, search::dir, allow
p, mydb_t, /var/lib/mydb(/.*)?, add_name::dir, allow
p, mydb_t, /var/lib/mydb(/.*)?, remove_name::dir, allow

# Append to log files
p, mydb_t, /var/log/mydb(/.*)?, append, allow
p, mydb_t, /var/log/mydb(/.*)?, write, allow

# Bind to TCP port 5432 (PostgreSQL-like)
p, mydb_t, tcp:5432, name_bind, allow

# Capability to bind to ports
p, mydb_t, self::capability, net_bind_service, allow

# Unix socket for local connections
p, mydb_t, /var/run/mydb.sock, bind::unix_stream_socket, allow
p, mydb_t, /var/run/mydb.sock, create::sock_file, allow
